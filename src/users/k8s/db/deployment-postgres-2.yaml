apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    description: ''
  labels:
    appgroup: ''
    version: v1
  name: postgres
  namespace: default
spec:
  selector:
    matchLabels:
      app: postgres
      version: v1
  template:
    metadata:
      annotations:
        pod.alpha.kubernetes.io/initialized: 'true'
      labels:
        app: postgres
        version: v1
    spec:
      containers:
        - name: postgres
          image: swr.ap-southeast-2.myhuaweicloud.com/practicum/postgres:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: PAAS_APP_NAME
              value: postgres
            - name: PAAS_NAMESPACE
              value: default
            - name: PAAS_PROJECT_ID
              value: b626c0f929fe4779b89d252305ca3444
            - name: POSTGRES_DB
              value: users
            - name: POSTGRES_USER
              value: root
            - name: POSTGRES_PASSWORD
              value: '0074'
          resources:
            requests:
              cpu: 500m
              memory: 1024Mi
            limits:
              cpu: 500m
              memory: 1024Mi
      imagePullSecrets:
        - name: default-secret
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      tolerations:
        - key: node.kubernetes.io/not-ready
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 300
        - key: node.kubernetes.io/unreachable
          operator: Exists
          effect: NoExecute
          tolerationSeconds: 300
      volumes: []
      initContainers: []
  serviceName: headless-postgres
  replicas: 1
  podManagementPolicy: OrderedReady
  revisionHistoryLimit: 10
  updateStrategy:
    type: RollingUpdate


---
apiVersion: v1
kind: Service
metadata:
  name: headless-postgres
  namespace: default
  labels:
    app: postgres
    version: v1
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: 'true'
spec:
  selector:
    app: postgres
    version: v1
  clusterIP: None
  ports:
    - name: postgres
      targetPort: 5432
      nodePort: 0
      port: 5438
      protocol: TCP
  type: ClusterIP


---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: default
  labels:
    app: postgres
    version: v1
  annotations: {}
spec:
  selector:
    app: postgres
    version: v1
  ports:
    - name: cce-service-0
      targetPort: 5432
      nodePort: 0
      port: 5438
      protocol: TCP
  type: ClusterIP
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack

